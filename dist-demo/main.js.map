{"version":3,"sources":["./demo/main.ts","./projects/ngx-masonry-gallery-lib/src/lib/masonry-gallery.component.ts","./demo/app/app.module.ts","./demo/environments/environment.ts","./demo/app/app.component.css","./demo/app/app.component.ts","./projects/ngx-masonry-gallery-lib/src/public_api.ts","./projects/ngx-masonry-gallery-lib/src/lib/utilities.ts","./projects/ngx-masonry-gallery-lib/src/lib/index.ts","./projects/ngx-masonry-gallery-lib/src/lib/masonry-gallery-models.ts","./demo/app/app.component.html","./projects/ngx-masonry-gallery-lib/src/lib/masonry-gallery.module.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport imagesLoadedMethod from 'imagesloaded';\r\nimport * as masonry from 'masonry-layout';\r\n\r\nimport { IMasonryGalleryImage } from './masonry-gallery-models';\r\nimport { utilities } from './utilities';\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: 'ngx-masonry-gallery',\r\n    template: '<div [id]=\"galleryGuid\"></div>'\r\n})\r\nexport class MasonryGalleryComponent\r\n    implements AfterViewInit, OnDestroy, OnChanges {\r\n    @Input() images: IMasonryGalleryImage[] = [];\r\n    @Input() width: number = 330;\r\n    @Input() gutter: number = 5;\r\n    @Input() verticalGutter: number = 5;\r\n    @Input() imageClasses: string[] = [];\r\n\r\n    @Output() clickImage = new EventEmitter<IMasonryGalleryImage>();\r\n    @Output() removeComplete = new EventEmitter<any[]>();\r\n    @Output() layoutComplete = new EventEmitter<any[]>();\r\n\r\n    public readonly galleryGuid: string = utilities.newGuid();\r\n\r\n    private readonly mansonryItemSelectorClass = `grid-item-${this.galleryGuid}`;\r\n    private readonly activeImages: ActiveImage[] = [];\r\n\r\n    private msnry?: any;\r\n    private grid?: any;\r\n    private changesToProcess?: SimpleChanges;\r\n    private viewReady: boolean = false;\r\n\r\n    constructor(private renderer: Renderer2) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.images && changes.images.currentValue) {\r\n            if (!this.viewReady) {\r\n                // process images once we can\r\n                this.changesToProcess = changes;\r\n            } else {\r\n                this.processImages(changes);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.msnry) {\r\n            this.msnry.destroy();\r\n        }\r\n    }\r\n\r\n    handleClick(image: IMasonryGalleryImage): void {\r\n        this.clickImage.next(image);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.viewReady = true;\r\n        this.initMasonry();\r\n\r\n        // process images now\r\n        if (this.changesToProcess) {\r\n            this.processImages(this.changesToProcess);\r\n            this.changesToProcess = undefined;\r\n        }\r\n    }\r\n\r\n    addImages(images: IMasonryGalleryImage[]): void {\r\n        if (images && images.length > 0) {\r\n            this.addImagesToGallery(images);\r\n        }\r\n    }\r\n\r\n    removeImages(images: IMasonryGalleryImage[]): void {\r\n        if (images && images.length > 0) {\r\n            images.forEach(image => {\r\n                this.removeImageFromGallery(image);\r\n            });\r\n        }\r\n    }\r\n\r\n    private processImages(changes: SimpleChanges): void {\r\n        const imagesToProcess = this.getAddedAndRemovesImages(changes);\r\n\r\n        // add images to mansonry layout\r\n        this.addImages(imagesToProcess.addedImages);\r\n\r\n        // removes images from layout\r\n        this.removeImages(imagesToProcess.removedImages);\r\n    }\r\n\r\n    private getAddedAndRemovesImages(\r\n        changes: SimpleChanges\r\n    ): {\r\n            addedImages: IMasonryGalleryImage[];\r\n            removedImages: IMasonryGalleryImage[];\r\n        } {\r\n        let addedImages: IMasonryGalleryImage[] = [];\r\n        const removedImages: IMasonryGalleryImage[] = [];\r\n\r\n        const newImagesValue = changes.images\r\n            .currentValue as IMasonryGalleryImage[];\r\n        const oldImagesValue = changes.images\r\n            .previousValue as IMasonryGalleryImage[];\r\n\r\n        if (!oldImagesValue) {\r\n            // all images are new ones\r\n            addedImages = changes.images.currentValue;\r\n        } else {\r\n            // process added images\r\n            newImagesValue.forEach(newImage => {\r\n                const existingImage = oldImagesValue.find(\r\n                    m => m.imageUrl.toLowerCase() === newImage.imageUrl.toLowerCase()\r\n                );\r\n\r\n                if (existingImage) {\r\n                    // image was in previous value && is in new, do nothing\r\n                } else {\r\n                    // image is new\r\n                    addedImages.push(newImage);\r\n                }\r\n            });\r\n\r\n            // process removed images\r\n            oldImagesValue.forEach(oldImage => {\r\n                const existingImage = newImagesValue.find(\r\n                    m => m.imageUrl.toLowerCase() === oldImage.imageUrl.toLowerCase()\r\n                );\r\n\r\n                if (existingImage) {\r\n                    // image was in previous value && is in new, do nothing\r\n                } else {\r\n                    // image is removed\r\n                    removedImages.push(oldImage);\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            addedImages: addedImages,\r\n            removedImages: removedImages\r\n        };\r\n    }\r\n\r\n    private initMasonry(): void {\r\n        this.grid = document.getElementById(this.galleryGuid);\r\n\r\n        // remove all existing data from grid\r\n        this.grid.innerHTML = '';\r\n\r\n        if (!this.grid) {\r\n            throw Error(\r\n                `Could not init mansory due to non existing elem with id '${\r\n                this.galleryGuid\r\n                }'`\r\n            );\r\n        }\r\n\r\n        this.msnry = new masonry(this.grid, {\r\n            // options...\r\n            itemSelector: '.' + this.mansonryItemSelectorClass,\r\n            columnWidth: this.width,\r\n            gutter: this.gutter,\r\n        });\r\n\r\n        const that = this;\r\n\r\n        this.msnry.on('layoutComplete', function (items) {\r\n            that.layoutComplete.next(items);\r\n        });\r\n\r\n        this.msnry.on('removeComplete', function (items) {\r\n            that.removeComplete.next(items);\r\n        });\r\n    }\r\n\r\n    private removeImageFromGallery(image: IMasonryGalleryImage): void {\r\n        // get image guid\r\n        const imageIdResult = this.activeImages.find(\r\n            m => m.image.imageUrl.toLowerCase() === image.imageUrl.toLowerCase()\r\n        );\r\n\r\n        if (!imageIdResult) {\r\n            // image was not found, this is probably an error\r\n            console.warn(\r\n                `Image with url '${\r\n                image.imageUrl\r\n                }' was not found. If you are adding images, make sure to 'replace' the images array with a new one\r\n                so that detection change can be executed instead of just adding an image to array\r\n                (which doesn't fire change detection on array property)`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // find image based on its id\r\n        const imageElem = document.getElementById(imageIdResult.id);\r\n\r\n        if (!imageElem) {\r\n            // image was not found in DOM\r\n            console.warn(\r\n                `Image with id '{${\r\n                imageIdResult.id\r\n                }}' was not found in DOM. Have you manipulated the DOM in some way?`\r\n            );\r\n            return;\r\n        }\r\n\r\n        // remove image from gallery\r\n        this.msnry.remove(imageElem);\r\n\r\n        // refresh layout\r\n        this.msnry.layout();\r\n\r\n        // remove image from array\r\n        for (let i = 0; i < this.activeImages.length; i++) {\r\n            const idWithImage = this.activeImages[i];\r\n            if (\r\n                idWithImage.image.imageUrl.toLowerCase() ===\r\n                imageIdResult.image.imageUrl.toLowerCase()\r\n            ) {\r\n                this.activeImages.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private addImagesToGallery(images: IMasonryGalleryImage[]): void {\r\n        if (!this.grid) {\r\n            throw Error(\r\n                'Grid element is not yet ready, are you trying to add image too soon?'\r\n            );\r\n        }\r\n\r\n        const imagesWrapper = this.renderer.createElement('span');\r\n\r\n        images.forEach(image => {\r\n            // generate unique image id\r\n            const imageId = this.getImageId();\r\n\r\n            // create element\r\n            const imageElem = this.renderer.createElement('img');\r\n            imageElem.setAttribute('id', imageId);\r\n            imageElem.setAttribute('alt', image.alt ? image.alt : 'no description');\r\n            imageElem.setAttribute('src', image.imageUrl);\r\n            // note - images are hidden by default and should be shown only after they are loaded\r\n            imageElem.setAttribute(\r\n                'style',\r\n                `display: none; width: ${this.width}px; margin-bottom: ${\r\n                this.verticalGutter\r\n                }px`\r\n            );\r\n            imageElem.className = this.getImageClass();\r\n            imageElem.addEventListener('click', () => {\r\n                this.handleClick(image);\r\n            });\r\n\r\n            // store guid with this image\r\n            this.activeImages.push({\r\n                id: imageId,\r\n                image: image\r\n            });\r\n\r\n            // add to dom and mansory & refresh layout\r\n            this.renderer.appendChild(imagesWrapper, imageElem);\r\n        });\r\n\r\n        // add html to dom\r\n        this.renderer.appendChild(this.grid, imagesWrapper);\r\n\r\n        // add images once they are loaded\r\n        const imgLoad = imagesLoadedMethod(imagesWrapper);\r\n        imgLoad.on('progress', (instance, image) => {\r\n            if (image.isLoaded) {\r\n                this.renderer.appendChild(this.grid, image.img);\r\n                // unhide image\r\n                this.renderer.setStyle(image.img, 'display', 'block');\r\n                this.msnry.appended(image.img);\r\n                this.msnry.reloadItems();\r\n            }\r\n        });\r\n    }\r\n\r\n    private getImageClass(): string {\r\n        let className = this.mansonryItemSelectorClass;\r\n\r\n        if (this.imageClasses && this.imageClasses.length > 0) {\r\n            const customClass = this.imageClasses.join(' ');\r\n\r\n            className += ' ' + customClass;\r\n        }\r\n\r\n        return className;\r\n    }\r\n\r\n    private getImageId(): string {\r\n        return this.galleryGuid + '_' + utilities.newGuid();\r\n    }\r\n}\r\n\r\ninterface ActiveImage {\r\n    id: string;\r\n    image: IMasonryGalleryImage;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { MasonryGalleryModule } from '../../projects/ngx-masonry-gallery-lib/src/public_api';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MasonryGalleryModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","import { AfterViewInit, ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\r\nimport { IMasonryGalleryImage, MasonryGalleryComponent } from 'projects/ngx-masonry-gallery-lib/src/lib';\r\n\r\ndeclare var hljs: any;\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n  private readonly numberOfInitiallyShownImages = 8;\r\n  private readonly numberOfImages: number = 23;\r\n  public readonly multipleImagesCount: number = 3;\r\n  private readonly imagePath: string = 'assets/images-compressed/';\r\n  private readonly imageExt: string = 'jpg';\r\n\r\n  public readonly installation: string = `npm install ngx-masonry-gallery --save`;\r\n\r\n  public readonly moduleRegistration: string = `\r\nimport { NgModule } from '@angular/core';\r\nimport { MasonryGalleryModule } from 'ngx-masonry-gallery';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    MasonryGalleryModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n`;\r\n\r\n  public readonly tsCode: string = `\r\nimport { IMasonryGalleryImage } from 'ngx-masonry-gallery';\r\n\r\nexport class AppComponent {\r\n\r\n    private urls: string[] = [\r\n        'https://www.ogttx.org/wp-content/themes/ogt/media/_frontend/img/bkg.jpg',\r\n        'http://www.magicalkenya.com/wp-content/uploads/2014/08/homebannerimg4.jpg',\r\n        'https://media.gadventures.com/media-server/cache/12/59/12591a5497a563245d0255824103842e.jpg',\r\n        'https://i.pinimg.com/originals/1c/aa/c5/1caac55143e3e11461c6ae5962403deb.jpg',\r\n        'http://littleguyintheeye.com/wp-content/uploads/2014/08/nature-3.jpg',\r\n    ];\r\n\r\n    public get images(): IMasonryGalleryImage[] {\r\n        return this.urls.map(m => <IMasonryGalleryImage>{\r\n            imageUrl: m\r\n    });\r\n  }\r\n}\r\n`;\r\n\r\n  public readonly usage: string = `<ngx-masonry-gallery [width]='250' [images]='images'></ngx-masonry-gallery>`;\r\n\r\n  /**\r\n   * This is here because the change event needs to be executed by the gallery to detect new/removed images\r\n   */\r\n  public initialImages?: IMasonryGalleryImage[];\r\n  public usedImages: IMasonryGalleryImage[] = [];\r\n  public pool: IMasonryGalleryImage[] = [];\r\n\r\n  @ViewChild('masonryGallery', { static: false }) masonryGallery: MasonryGalleryComponent;\r\n\r\n  constructor() {\r\n    // init pool\r\n    for (let i = 1; i <= this.numberOfImages; i++) {\r\n      const image: IMasonryGalleryImage = {\r\n        imageUrl: `${this.imagePath}${i}.${this.imageExt}`\r\n      };\r\n\r\n      this.pool.push(image);\r\n    }\r\n\r\n    // init initial images\r\n    const images: IMasonryGalleryImage[] = [];\r\n    for (let i = 1; i <= this.numberOfInitiallyShownImages; i++) {\r\n      const image = this.pool[Math.floor(Math.random() * this.pool.length)];\r\n      // remove image from pool\r\n      this.removeFromPoolImages(image);\r\n      images.push(image);\r\n      this.usedImages.push(image);\r\n    }\r\n\r\n    this.initialImages = images;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.prettify();\r\n  }\r\n\r\n  addRandomImage(): void {\r\n    if (this.pool.length === 0) {\r\n      alert('No more images!');\r\n      return;\r\n    }\r\n\r\n    const image = this.pool[Math.floor(Math.random() * this.pool.length)];\r\n\r\n    if (image) {\r\n      this.masonryGallery.addImages([image]);\r\n      this.usedImages.push(image);\r\n\r\n      // remove image from pool\r\n      this.removeFromPoolImages(image);\r\n    }\r\n  }\r\n\r\n  removeRandomImage(): void {\r\n    const image = this.usedImages[Math.floor(Math.random() * this.usedImages.length)];\r\n\r\n    if (image) {\r\n      this.usedImages = this.usedImages.filter(m => m.imageUrl.toLowerCase() !== image.imageUrl.toLowerCase());\r\n      // add image back to pool\r\n      this.pool.push(image);\r\n      // remove\r\n      this.masonryGallery.removeImages([image]);\r\n    }\r\n  }\r\n\r\n  addMultipleImages(): void {\r\n    const imagesToAdd = [];\r\n    for (let i = 0; i < this.multipleImagesCount; i++) {\r\n      const image = this.pool[Math.floor(Math.random() * this.pool.length)];\r\n\r\n      if (image) {\r\n        this.usedImages.push(image);\r\n        imagesToAdd.push(image);\r\n        // remove image from pool\r\n        this.removeFromPoolImages(image);\r\n      }\r\n    }\r\n\r\n    this.masonryGallery.addImages(imagesToAdd);\r\n  }\r\n\r\n  removeMultipleImages(): void {\r\n    const imagesToRemove = [];\r\n    for (let i = 0; i < this.multipleImagesCount; i++) {\r\n      const image = this.usedImages[Math.floor(Math.random() * this.usedImages.length)];\r\n\r\n      if (image) {\r\n        this.pool.push(image);\r\n        imagesToRemove.push(image);\r\n        this.removeFromUsedImages(image);\r\n      }\r\n    }\r\n\r\n    this.masonryGallery.removeImages(imagesToRemove);\r\n  }\r\n\r\n  private removeFromPoolImages(image: IMasonryGalleryImage): void {\r\n    for (let i = 0; i < this.pool.length; i++) {\r\n      const usedImage = this.pool[i];\r\n      if (usedImage.imageUrl.toLowerCase() === image.imageUrl.toLowerCase()) {\r\n        this.pool.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  private removeFromUsedImages(image: IMasonryGalleryImage): void {\r\n    for (let i = 0; i < this.usedImages.length; i++) {\r\n      const usedImage = this.usedImages[i];\r\n      if (usedImage.imageUrl.toLowerCase() === image.imageUrl.toLowerCase()) {\r\n        this.usedImages.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  private prettify(): void {\r\n    hljs.initHighlightingOnLoad();\r\n  }\r\n}\r\n","/*\r\n * Public API\r\n */\r\n\r\nexport * from './lib/index';\r\n","export class Utilities {\r\n    newGuid() {\r\n       return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n           // tslint:disable-next-line:no-bitwise triple-equals\r\n           const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n           return v.toString(16);\r\n       });\r\n   }\r\n}\r\n\r\nexport let utilities = new Utilities();\r\n","export * from './masonry-gallery.module';\r\nexport * from './masonry-gallery-models';\r\nexport * from './masonry-gallery.component';\r\n","export class IMasonryGalleryImage {\r\n    public imageUrl: string;\r\n    public alt?: string;\r\n}\r\n","export default \"<h1>Masonry gallery demo</h1>\\r\\n\\r\\n<div class=\\\"alert alert-warning\\\" role=\\\"alert\\\">\\r\\n  More features will be added depending on how much traction this gets. To show support, please consider starring the <a href=\\\"https://github.com/Enngage/ngx-masonry-gallery\\\">repo</a>.\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mt-4\\\">\\r\\n    <button (click)=\\\"addRandomImage()\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">Add random image</button>\\r\\n    <button (click)=\\\"removeRandomImage()\\\" type=\\\"button\\\" class=\\\"btn btn-danger ml-2\\\">remove random image</button>\\r\\n    <button (click)=\\\"addMultipleImages()\\\" type=\\\"button\\\" class=\\\"btn btn-success ml-2\\\">Add {{ multipleImagesCount }} images</button>\\r\\n    <button (click)=\\\"removeMultipleImages()\\\" type=\\\"button\\\" class=\\\"btn btn-danger ml-2\\\">Remove {{ multipleImagesCount }} images</button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mt-2\\\">\\r\\n    <ngx-masonry-gallery #masonryGallery [width]=\\\"250\\\" [images]=\\\"initialImages\\\"></ngx-masonry-gallery>\\r\\n</div>\\r\\n\\r\\n<h2 class=\\\"mt-3\\\">\\r\\n    Installation\\r\\n</h2>\\r\\n\\r\\n<div class=\\\"mt-2\\\">\\r\\n    <pre>\\r\\n        <code [innerText]=\\\"installation\\\"></code>\\r\\n    </pre>\\r\\n</div>\\r\\n\\r\\n<h2>\\r\\n    Module inicialization\\r\\n</h2>\\r\\n\\r\\n<div>\\r\\n    <pre class=\\\"mt-2\\\">\\r\\n        <code [innerText]=\\\"moduleRegistration\\\"></code>\\r\\n    </pre>\\r\\n</div>\\r\\n\\r\\n<h2>\\r\\n    Usage\\r\\n</h2>\\r\\n\\r\\n<div class=\\\"mt-2\\\">\\r\\n    <pre >\\r\\n        <code [innerText]=\\\"usage\\\"></code>\\r\\n        <code [innerText]=\\\"tsCode\\\"></code>\\r\\n    </pre>\\r\\n</div>\\r\\n\\r\\n<h2>\\r\\n    Configuration\\r\\n</h2>\\r\\n\\r\\n<div class=\\\"mt-2\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\">Property</th>\\r\\n                <th scope=\\\"col\\\">Type</th>\\r\\n                <th scope=\\\"col\\\">Description</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td>width</td>\\r\\n                <td>number</td>\\r\\n                <td>Width of the column in pixels</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>gutter</td>\\r\\n                <td>number</td>\\r\\n                <td>Size of gutter between columns in pixels</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>verticalGutter</td>\\r\\n                <td>number</td>\\r\\n                <td>Size of the gutter between particular items in pixels. Can be combined with gutter to create all around gutter.</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>imageClasses</td>\\r\\n                <td>string[]</td>\\r\\n                <td>Array of classes added to images for custom styling</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n<h2>\\r\\n    Methods\\r\\n</h2>\\r\\n\\r\\n<div class=\\\"mt-2\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\">Method</th>\\r\\n                <th scope=\\\"col\\\">Input</th>\\r\\n                <th scope=\\\"col\\\">Description</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td>addImages</td>\\r\\n                <td>IMasonryGalleryImage[]</td>\\r\\n                <td>Adds given images to gallery</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>removeImages</td>\\r\\n                <td>IMasonryGalleryImage[]</td>\\r\\n                <td>Removes selected images from gallery</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<h2>\\r\\n    Events\\r\\n</h2>\\r\\n\\r\\n<div class=\\\"mt-2\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th scope=\\\"col\\\">Event</th>\\r\\n                <th scope=\\\"col\\\">Type</th>\\r\\n                <th scope=\\\"col\\\">Description</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td>clickImage</td>\\r\\n                <td>Output</td>\\r\\n                <td>Executes when an image is clicked.\\r\\n                    <strong>IMasonryGalleryImage</strong> is passed to event.</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>layoutComplete</td>\\r\\n                <td>Output</td>\\r\\n                <td>See <a href=\\\"https://masonry.desandro.com/events.html#layoutcomplete\\\">layoutComplete</a>. Contains layout items.</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>removeComplete</td>\\r\\n                <td>Output</td>\\r\\n                <td>See <a href=\\\"https://masonry.desandro.com/events.html#removecomplete\\\">removeComplete</a>. Contains removed items.</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\";","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MasonryGalleryComponent } from './masonry-gallery.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        MasonryGalleryComponent,\r\n    ],\r\n    exports: [\r\n        MasonryGalleryComponent,\r\n    ],\r\n})\r\nexport class MasonryGalleryModule { }\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}